{"componentChunkName":"component---src-templates-docs-js","path":"/api/get/eth_getLogs","result":{"data":{"site":{"siteMetadata":{"title":"manifoldfinance","docsLocation":"https://github.com/manifoldfinance/gitdocs","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"0df334ba-c20d-50a8-9d66-74f2d5c9ee55","title":"Eth Get Logs","slug":"/api/get/eth_getLogs"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"eth_getLogs\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"/v1/jsonrpc/:network/eth_getLogs\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Returns an array of all logs matching a given filter object.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"REQUEST\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getLogs?params=:paramsJSONArray\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"HEADERS\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Content-Type: application/json\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"REQUEST PARAMS\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"FILTER OBJECT\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"address\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[optional]\"), \" - a string representing the address (20 bytes) to check for balance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fromBlock\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[optional, default is \\\"latest\\\"]\"), \" - an integer block number, or the string \\\"latest\\\", \\\"earliest\\\" or\\n\\\"pending\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"toBlock\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[optional, default is \\\"latest\\\"]\"), \" - an integer block number, or the string \\\"latest\\\", \\\"earliest\\\" or\\n\\\"pending\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"topics\"), mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[optional]\"), \" - Array of 32 Bytes DATA topics. Topics are order-dependent.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"blockhash\"), \":\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[optional, \", \"*\", \"*\", \"_\", \"future\"), \"*\", \"*\", \"]\", \"_\", \" With the addition of EIP-234, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"blockHash\"), \" will be a new filter\\noption which restricts the logs returned to the single block with the 32-byte hash \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"blockHash\"), \". Using\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"blockHash\"), \" is equivalent to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fromBlock\"), \" = \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"toBlock\"), \" = the block number with hash \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"blockHash\"), \". If \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"blockHash\"), \" is\\npresent in in the filter criteria, then neither \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fromBlock\"), \" nor \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"toBlock\"), \" are allowed.\"))))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"EXAMPLE\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"// HTTP GET\\ncurl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getLogs --data-urlencode 'params=[{\\\"topics\\\":[\\\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\\\"]}]'\\n\\n// HTTP POST\\ncurl https://mainnet.backbonecabal.xyz/ \\\\\\n    -X POST \\\\\\n    -H \\\"Content-Type: application/json\\\" \\\\\\n    -d '{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"topics\\\":[\\\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\\\"]}],\\\"id\\\":1}'\\n\\n// WEBSOCKETS\\n>wscat -c wss://mainnet.backbonecabal.xyz/ws\\n>{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\": [\\\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\\\"],\\\"id\\\":1}\\n\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"RESPONSE\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"RESULT FIELDS\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LOG OBJECTS\"), \" - An array of log objects, or an empty array if nothing has changed since last poll.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For filters created with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eth_newBlockFilter\"), \" the return are block hashes of 32 Bytes), e.g.\\n\", \"[\\\"0x3454645634534...\\\"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For filters created with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eth_newPendingTransactionFilter\"), \" the return are transaction hashes of 32 Bytes), e.g.\\n\", \"[\\\"0x6345343454645...\\\"]\", \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For filters created with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eth_newFilter\"), \" logs are objects with following params:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"removed\"), \": true when the log was removed, due to a chain reorganization. false if its a valid log.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"logIndex\"), \": integer of the log index position in the block. null when its pending log.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"transactionIndex\"), \": integer of the transactions index position log was created from. null when its pending\\nlog.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"transactionHash\"), \": 32 Bytes - hash of the transactions this log was created from. null when its pending log.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"blockHash\"), \": 32 Bytes - hash of the block where this log was in. null when its pending. null when its\\npending log.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"blockNumber\"), \": the block number where this log was in. null when its pending. null when its pending log.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"address\"), \": 20 Bytes - address from which this log originated.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"data\"), \": contains one or more 32 Bytes non-indexed arguments of the log.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"topics\"), \": Array of 0 to 4 32 Bytes of indexed log arguments. (In solidity: The first topic is the hash of\\nthe signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the\\nanonymous specifier.)\"))))))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"BODY\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"jsonrpc\\\": \\\"2.0\\\",\\n    \\\"id\\\": 1,\\n    \\\"result\\\": [\\n        {\\n            \\\"address\\\": \\\"0x1a94fce7ef36bc90959e206ba569a12afbc91ca1\\\",\\n            \\\"topics\\\": [\\\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\\\"],\\n            \\\"data\\\": \\\"0x0000000000000000000000003e3310720058c51f0de456e273c626cdd35065700000000000000000000000000000000000000000000000000000000000003185000000000000000000000000000000000000000000000000000000000000318200000000000000000000000000000000000000000000000000000000005c2a23\\\",\\n            \\\"blockNumber\\\": \\\"0x5c29fb\\\",\\n            \\\"transactionHash\\\": \\\"0x3dc91b98249fa9f2c5c37486a2427a3a7825be240c1c84961dfb3063d9c04d50\\\",\\n            \\\"transactionIndex\\\": \\\"0x1d\\\",\\n            \\\"blockHash\\\": \\\"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\\\",\\n            \\\"logIndex\\\": \\\"0x1d\\\",\\n            \\\"removed\\\": false\\n        },\\n        {\\n            \\\"address\\\": \\\"0x06012c8cf97bead5deae237070f9587f8e7a266d\\\",\\n            \\\"topics\\\": [\\\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\\\"],\\n            \\\"data\\\": \\\"0x00000000000000000000000077ea137625739598666ded665953d26b3d8e374400000000000000000000000000000000000000000000000000000000000749ff00000000000000000000000000000000000000000000000000000000000a749d00000000000000000000000000000000000000000000000000000000005c2a0f\\\",\\n            \\\"blockNumber\\\": \\\"0x5c29fb\\\",\\n            \\\"transactionHash\\\": \\\"0x788b1442414cb9c9a36dba2abe250763161a6f6395788a2e808f1b34e92beec1\\\",\\n            \\\"transactionIndex\\\": \\\"0x54\\\",\\n            \\\"blockHash\\\": \\\"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\\\",\\n            \\\"logIndex\\\": \\\"0x57\\\",\\n            \\\"removed\\\": false\\n        }\\n    ]\\n}\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#eth_getlogs","title":"eth_getLogs","items":[{"url":"#v1jsonrpcnetworketh_getlogs","title":"/v1/jsonrpc/:network/eth_getLogs","items":[{"url":"#request","title":"REQUEST","items":[{"url":"#headers","title":"HEADERS"},{"url":"#request-params","title":"REQUEST PARAMS"},{"url":"#example","title":"EXAMPLE"}]},{"url":"#response","title":"RESPONSE","items":[{"url":"#result-fields","title":"RESULT FIELDS"},{"url":"#body","title":"BODY"}]}]}]}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"api/get/eth_getLogs.md","fields":null},"frontmatter":{"metaTitle":null,"showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"master"},"gitCommit":{"hash":"48f7516fa0d54d3b0ca22093692d670a8d6d8767","date":"2021-02-26 01:28"}},"pageContext":{"id":"0df334ba-c20d-50a8-9d66-74f2d5c9ee55"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}