{
  "componentChunkName": "component---src-templates-docs-js",
  "path": "/api/get/eth_getBlockByHash",
  "result": {
    "data": {
      "site": {
        "siteMetadata": {
          "title": "Manifold Finance Documentation Portal",
          "docsLocation": "https://github.com/manifoldfinance/gitdocs",
          "docsLocationType": "github",
          "editable": true
        }
      },
      "mdx": {
        "fields": {
          "id": "1dd3b776-2a94-5d3f-833b-d376b3f2b3fa",
          "title": "Eth Get Block By Hash",
          "slug": "/api/get/eth_getBlockByHash"
        },
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"eth_getBlockByHash\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"/v1/jsonrpc/:network/eth_getBlockByHash\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Returns information about a block by hash.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"REQUEST\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockByHash?params=:paramsJSONArray\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"HEADERS\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Content-Type: application/json\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"REQUEST PARAMS\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"BLOCK HASH\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[required]\"), \" - a string representing the hash (32 bytes) of a block\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SHOW TRANSACTION DETAILS FLAG\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[required]\"), \" - if set to true, it returns the full transaction objects, if false\\nonly the hashes of the transactions.\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"EXAMPLE\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"// HTTP GET\\ncurl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockByHash --data-urlencode 'params=[\\\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\\\",false]'\\n\\n// HTTP POST\\ncurl https://mainnet.backbonecabal.xyz/ \\\\\\n    -X POST \\\\\\n    -H \\\"Content-Type: application/json\\\" \\\\\\n    -d '{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getBlockByHash\\\",\\\"params\\\": [\\\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\\\",false],\\\"id\\\":1}'\\n\\n// WEBSOCKETS\\n>wscat -c wss://mainnet.backbonecabal.xyz/ws\\n>{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getBlockByHash\\\",\\\"params\\\": [\\\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\\\",false],\\\"id\\\":1}\\n\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"RESPONSE\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"RESULT FIELDS\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"BLOCK\"), \" - A block object, or null when no block was found\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"number\"), \": the block number. null when its pending block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hash\"), \": 32 Bytes - hash of the block. null when its pending block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"parentHash\"), \": 32 Bytes - hash of the parent block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nonce\"), \": 8 Bytes - hash of the generated proof-of-work. null when its pending block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sha3Uncles\"), \": 32 Bytes - SHA3 of the uncles data in the block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"logsBloom\"), \": 256 Bytes - the bloom filter for the logs of the block. null when its pending block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"transactionsRoot\"), \": 32 Bytes - the root of the transaction trie of the block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"stateRoot\"), \": 32 Bytes - the root of the final state trie of the block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"receiptsRoot\"), \": 32 Bytes - the root of the receipts trie of the block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"miner\"), \": 20 Bytes - the address of the beneficiary to whom the mining rewards were given.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"difficulty\"), \": integer of the difficulty for this block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"totalDifficulty\"), \": integer of the total difficulty of the chain until this block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"extraData\"), \": the \\\"extra data\\\" field of this block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"size\"), \": integer the size of this block in bytes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gasLimit\"), \": the maximum gas allowed in this block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gasUsed\"), \": the total used gas by all transactions in this block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"timestamp\"), \": the unix timestamp for when the block was collated.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"transactions\"), \": Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given\\nparameter.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"uncles\"), \": an Array of uncle hashes.\"))))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"BODY\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"jsonrpc\\\": \\\"2.0\\\",\\n    \\\"id\\\": 1,\\n    \\\"result\\\": {\\n        \\\"difficulty\\\": \\\"0xbfabcdbd93dda\\\",\\n        \\\"extraData\\\": \\\"0x737061726b706f6f6c2d636e2d6e6f64652d3132\\\",\\n        \\\"gasLimit\\\": \\\"0x79f39e\\\",\\n        \\\"gasUsed\\\": \\\"0x79ccd3\\\",\\n        \\\"hash\\\": \\\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\\\",\\n        \\\"logsBloom\\\": \\\"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\\\",\\n        \\\"miner\\\": \\\"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\\\",\\n        \\\"mixHash\\\": \\\"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\\\",\\n        \\\"nonce\\\": \\\"0x4db7a1c01d8a8072\\\",\\n        \\\"number\\\": \\\"0x5bad55\\\",\\n        \\\"parentHash\\\": \\\"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\\\",\\n        \\\"receiptsRoot\\\": \\\"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\\\",\\n        \\\"sha3Uncles\\\": \\\"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\\\",\\n        \\\"size\\\": \\\"0x41c7\\\",\\n        \\\"stateRoot\\\": \\\"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\\\",\\n        \\\"timestamp\\\": \\\"0x5b541449\\\",\\n        \\\"totalDifficulty\\\": \\\"0x12ac11391a2f3872fcd\\\",\\n        \\\"transactions\\\": [\\n            \\\"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\\\",\\n            \\\"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\\\",\\n            \\\"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\\\",\\n            \\\"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\\\",\\n            \\\"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\\\",\\n            \\\"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\\\",\\n            \\\"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\\\",\\n            \\\"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\\\",\\n            \\\"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\\\"\\n        ],\\n        \\\"transactionsRoot\\\": \\\"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\\\",\\n        \\\"uncles\\\": [\\\"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\\\"]\\n    }\\n}\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "tableOfContents": {
          "items": [
            {
              "url": "#eth_getblockbyhash",
              "title": "eth_getBlockByHash",
              "items": [
                {
                  "url": "#v1jsonrpcnetworketh_getblockbyhash",
                  "title": "/v1/jsonrpc/:network/eth_getBlockByHash",
                  "items": [
                    {
                      "url": "#request",
                      "title": "REQUEST",
                      "items": [
                        { "url": "#headers", "title": "HEADERS" },
                        { "url": "#request-params", "title": "REQUEST PARAMS" },
                        { "url": "#example", "title": "EXAMPLE" }
                      ]
                    },
                    {
                      "url": "#response",
                      "title": "RESPONSE",
                      "items": [
                        { "url": "#result-fields", "title": "RESULT FIELDS" },
                        { "url": "#body", "title": "BODY" }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "timeToRead": 1,
        "parent": {
          "__typename": "File",
          "relativePath": "api/get/eth_getBlockByHash.md",
          "fields": null
        },
        "frontmatter": {
          "metaTitle": null,
          "showMetadata": null,
          "editable": null,
          "showPreviousNext": null,
          "showToc": null
        }
      },
      "gitBranch": { "name": "master" },
      "gitCommit": {
        "hash": "baf0fa6f35d8f820cc62345ab6dad7a035ce28db",
        "date": "2021-02-26 01:42"
      }
    },
    "pageContext": { "id": "1dd3b776-2a94-5d3f-833b-d376b3f2b3fa" }
  },
  "staticQueryHashes": [
    "12478684",
    "12478684",
    "2882937274",
    "2882937274",
    "353167761",
    "353167761",
    "3812332637",
    "3812332637"
  ]
}
