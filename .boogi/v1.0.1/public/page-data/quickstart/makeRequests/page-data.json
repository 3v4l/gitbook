{
  "componentChunkName": "component---src-templates-docs-js",
  "path": "/quickstart/makeRequests",
  "result": {
    "data": {
      "site": {
        "siteMetadata": {
          "title": "Manifold Finance Documentation Portal",
          "docsLocation": "https://github.com/manifoldfinance/gitdocs",
          "docsLocationType": "github",
          "editable": true
        }
      },
      "mdx": {
        "fields": {
          "id": "bf6f3753-ba54-53cc-a43a-8267a7e42065",
          "title": "Make Requests",
          "slug": "/quickstart/makeRequests"
        },
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Make Requests\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"JSON-RPC Methods\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is a quick command line example using CURL:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ curl -X POST\\n-H \\\"Content-Type: application/json\\\"\\n--data '{\\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 1, \\\"method\\\": \\\"eth_blockNumber\\\",\\n\\\"params\\\": []}'\\n\\\"https://mainnet.backbonecabal.xyz/YOUR-API-KEY\\\"\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The result should look something like this:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ {\\\"jsonrpc\\\": \\\"2.0\\\",\\\"result\\\": \\\"0x3ccb11\\\", \\\"id\\\":1}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOTE:\"), \" \\\"0x3ccb11\\\" will be replaced with the block number of the most recent block on that network\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ethereum/wiki/wiki/JSON-RPC\"\n  }), \"Read more about JSON RPC\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Important to note that JSON-RPC is transport agnostic, meaning same concepts can be used over HTTP, WebSockets or other\\nmessage passing environments. All JSON_RPC methods listed in 'Ethereum API' are also supported over websockets.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Rest-like Backbone API\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber?token=YOUR-API-KEY\\n\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Subscriptions and Filters\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"TODO\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "tableOfContents": {
          "items": [
            {
              "url": "#make-requests",
              "title": "Make Requests",
              "items": [
                {
                  "items": [
                    { "url": "#json-rpc-methods", "title": "JSON-RPC Methods" },
                    {
                      "url": "#rest-like-backbone-api",
                      "title": "Rest-like Backbone API"
                    },
                    {
                      "url": "#subscriptions-and-filters",
                      "title": "Subscriptions and Filters"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "timeToRead": 1,
        "parent": {
          "__typename": "File",
          "relativePath": "quickstart/makeRequests.md",
          "fields": null
        },
        "frontmatter": {
          "metaTitle": null,
          "showMetadata": null,
          "editable": null,
          "showPreviousNext": null,
          "showToc": null
        }
      },
      "gitBranch": { "name": "master" },
      "gitCommit": {
        "hash": "baf0fa6f35d8f820cc62345ab6dad7a035ce28db",
        "date": "2021-02-26 01:42"
      }
    },
    "pageContext": { "id": "bf6f3753-ba54-53cc-a43a-8267a7e42065" }
  },
  "staticQueryHashes": [
    "12478684",
    "12478684",
    "2882937274",
    "2882937274",
    "353167761",
    "353167761",
    "3812332637",
    "3812332637"
  ]
}
