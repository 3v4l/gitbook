{
  "expireTime": 9007200869051275000,
  "key": "gatsby-plugin-mdx-entire-payload-e71405719deef5345fb0e5b6bcdd3d8d-",
  "val": {
    "mdast": {
      "type": "root",
      "children": [
        {
          "type": "heading",
          "depth": 1,
          "children": [
            {
              "type": "text",
              "value": "eth_getWork",
              "position": {
                "start": { "line": 1, "column": 3, "offset": 2 },
                "end": { "line": 1, "column": 14, "offset": 13 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 1, "column": 1, "offset": 0 },
            "end": { "line": 1, "column": 14, "offset": 13 },
            "indent": []
          }
        },
        {
          "type": "heading",
          "depth": 2,
          "children": [
            {
              "type": "text",
              "value": "/v1/jsonrpc/:network/eth_getWork",
              "position": {
                "start": { "line": 3, "column": 4, "offset": 18 },
                "end": { "line": 3, "column": 36, "offset": 50 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 3, "column": 1, "offset": 15 },
            "end": { "line": 3, "column": 36, "offset": 50 },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the hash of the current block, the seedHash, and the boundary condition to be met (\"target\").",
              "position": {
                "start": { "line": 5, "column": 1, "offset": 52 },
                "end": { "line": 5, "column": 102, "offset": 153 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 5, "column": 1, "offset": 52 },
            "end": { "line": 5, "column": 102, "offset": 153 },
            "indent": []
          }
        },
        {
          "type": "heading",
          "depth": 3,
          "children": [
            {
              "type": "text",
              "value": "REQUEST",
              "position": {
                "start": { "line": 7, "column": 5, "offset": 159 },
                "end": { "line": 7, "column": 12, "offset": 166 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 7, "column": 1, "offset": 155 },
            "end": { "line": 7, "column": 12, "offset": 166 },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "inlineCode",
              "value": "GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getWork",
              "position": {
                "start": { "line": 9, "column": 1, "offset": 168 },
                "end": { "line": 9, "column": 68, "offset": 235 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 9, "column": 1, "offset": 168 },
            "end": { "line": 9, "column": 68, "offset": 235 },
            "indent": []
          }
        },
        {
          "type": "heading",
          "depth": 4,
          "children": [
            {
              "type": "text",
              "value": "HEADERS",
              "position": {
                "start": { "line": 11, "column": 6, "offset": 242 },
                "end": { "line": 11, "column": 13, "offset": 249 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 11, "column": 1, "offset": 237 },
            "end": { "line": 11, "column": 13, "offset": 249 },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "inlineCode",
              "value": "Content-Type: application/json",
              "position": {
                "start": { "line": 13, "column": 1, "offset": 251 },
                "end": { "line": 13, "column": 33, "offset": 283 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 13, "column": 1, "offset": 251 },
            "end": { "line": 13, "column": 33, "offset": 283 },
            "indent": []
          }
        },
        {
          "type": "heading",
          "depth": 4,
          "children": [
            {
              "type": "text",
              "value": "EXAMPLE",
              "position": {
                "start": { "line": 15, "column": 6, "offset": 290 },
                "end": { "line": 15, "column": 13, "offset": 297 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 15, "column": 1, "offset": 285 },
            "end": { "line": 15, "column": 13, "offset": 297 },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "bash",
          "meta": null,
          "value": "// HTTP GET\ncurl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getWork\n\n// HTTP POST\ncurl https://mainnet.backbonecabal.xyz/ \\\n    -X POST \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\": [],\"id\":1}'\n\n// WEBSOCKETS\n>wscat -c wss://mainnet.backbonecabal.xyz/ws\n>{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\": [],\"id\":1}",
          "position": {
            "start": { "line": 17, "column": 1, "offset": 299 },
            "end": { "line": 30, "column": 4, "offset": 695 },
            "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
          }
        },
        {
          "type": "heading",
          "depth": 3,
          "children": [
            {
              "type": "text",
              "value": "RESPONSE",
              "position": {
                "start": { "line": 32, "column": 5, "offset": 701 },
                "end": { "line": 32, "column": 13, "offset": 709 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 32, "column": 1, "offset": 697 },
            "end": { "line": 32, "column": 13, "offset": 709 },
            "indent": []
          }
        },
        {
          "type": "heading",
          "depth": 4,
          "children": [
            {
              "type": "text",
              "value": "RESULT FIELDS",
              "position": {
                "start": { "line": 34, "column": 6, "offset": 716 },
                "end": { "line": 34, "column": 19, "offset": 729 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 34, "column": 1, "offset": 711 },
            "end": { "line": 34, "column": 19, "offset": 729 },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "WORK ARRAY",
                      "position": {
                        "start": { "line": 36, "column": 5, "offset": 735 },
                        "end": { "line": 36, "column": 17, "offset": 747 },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": { "line": 36, "column": 5, "offset": 735 },
                    "end": { "line": 36, "column": 17, "offset": 747 },
                    "indent": []
                  }
                },
                {
                  "type": "list",
                  "ordered": false,
                  "start": null,
                  "spread": false,
                  "children": [
                    {
                      "type": "listItem",
                      "spread": false,
                      "checked": null,
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "32 Bytes - current block header pow-hash",
                              "position": {
                                "start": {
                                  "line": 37,
                                  "column": 9,
                                  "offset": 756
                                },
                                "end": {
                                  "line": 37,
                                  "column": 49,
                                  "offset": 796
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": { "line": 37, "column": 9, "offset": 756 },
                            "end": { "line": 37, "column": 49, "offset": 796 },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": { "line": 37, "column": 5, "offset": 752 },
                        "end": { "line": 37, "column": 49, "offset": 796 },
                        "indent": []
                      }
                    },
                    {
                      "type": "listItem",
                      "spread": false,
                      "checked": null,
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "32 Bytes - the seed hash used for the DAG.",
                              "position": {
                                "start": {
                                  "line": 38,
                                  "column": 9,
                                  "offset": 805
                                },
                                "end": {
                                  "line": 38,
                                  "column": 51,
                                  "offset": 847
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": { "line": 38, "column": 9, "offset": 805 },
                            "end": { "line": 38, "column": 51, "offset": 847 },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": { "line": 38, "column": 5, "offset": 801 },
                        "end": { "line": 38, "column": 51, "offset": 847 },
                        "indent": []
                      }
                    },
                    {
                      "type": "listItem",
                      "spread": false,
                      "checked": null,
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.",
                              "position": {
                                "start": {
                                  "line": 39,
                                  "column": 9,
                                  "offset": 856
                                },
                                "end": {
                                  "line": 39,
                                  "column": 74,
                                  "offset": 921
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": { "line": 39, "column": 9, "offset": 856 },
                            "end": { "line": 39, "column": 74, "offset": 921 },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": { "line": 39, "column": 5, "offset": 852 },
                        "end": { "line": 39, "column": 74, "offset": 921 },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": { "line": 37, "column": 5, "offset": 752 },
                    "end": { "line": 39, "column": 74, "offset": 921 },
                    "indent": [5, 5]
                  }
                }
              ],
              "position": {
                "start": { "line": 36, "column": 1, "offset": 731 },
                "end": { "line": 39, "column": 74, "offset": 921 },
                "indent": [1, 1, 1]
              }
            }
          ],
          "position": {
            "start": { "line": 36, "column": 1, "offset": 731 },
            "end": { "line": 39, "column": 74, "offset": 921 },
            "indent": [1, 1, 1]
          }
        },
        {
          "type": "heading",
          "depth": 4,
          "children": [
            {
              "type": "text",
              "value": "BODY",
              "position": {
                "start": { "line": 41, "column": 6, "offset": 928 },
                "end": { "line": 41, "column": 10, "offset": 932 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 41, "column": 1, "offset": 923 },
            "end": { "line": 41, "column": 10, "offset": 932 },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "js",
          "meta": null,
          "value": "{\n  \"id\":1,\n  \"jsonrpc\":\"2.0\",\n  \"result\": [\n      \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n      \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\",\n      \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\"\n    ]\n}",
          "position": {
            "start": { "line": 43, "column": 1, "offset": 934 },
            "end": { "line": 53, "column": 4, "offset": 1223 },
            "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
          }
        },
        {
          "type": "export",
          "value": "export const _frontmatter = {}",
          "position": {
            "start": { "line": 56, "column": 1, "offset": 1226 },
            "end": { "line": 56, "column": 31, "offset": 1256 },
            "indent": []
          }
        }
      ],
      "position": {
        "start": { "line": 1, "column": 1, "offset": 0 },
        "end": { "line": 56, "column": 31, "offset": 1256 }
      }
    },
    "scopeImports": ["import * as React from 'react'"],
    "scopeIdentifiers": ["React"],
    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"eth_getWork\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"/v1/jsonrpc/:network/eth_getWork\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Returns the hash of the current block, the seedHash, and the boundary condition to be met (\\\"target\\\").\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"REQUEST\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getWork\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"HEADERS\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Content-Type: application/json\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"EXAMPLE\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"// HTTP GET\\ncurl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getWork\\n\\n// HTTP POST\\ncurl https://mainnet.backbonecabal.xyz/ \\\\\\n    -X POST \\\\\\n    -H \\\"Content-Type: application/json\\\" \\\\\\n    -d '{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getWork\\\",\\\"params\\\": [],\\\"id\\\":1}'\\n\\n// WEBSOCKETS\\n>wscat -c wss://mainnet.backbonecabal.xyz/ws\\n>{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getWork\\\",\\\"params\\\": [],\\\"id\\\":1}\\n\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"RESPONSE\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"RESULT FIELDS\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"WORK ARRAY\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"32 Bytes - current block header pow-hash\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"32 Bytes - the seed hash used for the DAG.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"32 Bytes - the boundary condition (\\\"target\\\"), 2^256 / difficulty.\"))))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"BODY\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n  \\\"id\\\":1,\\n  \\\"jsonrpc\\\":\\\"2.0\\\",\\n  \\\"result\\\": [\\n      \\\"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\\\",\\n      \\\"0x5EED00000000000000000000000000005EED0000000000000000000000000000\\\",\\n      \\\"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\\\"\\n    ]\\n}\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
    "rawMDXOutput": "/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h1 parentName=\"section\">{`eth_getWork`}</h1></section>\n    <section><h2 parentName=\"section\">{`/v1/jsonrpc/:network/eth_getWork`}</h2><p parentName=\"section\">{`Returns the hash of the current block, the seedHash, and the boundary condition to be met (\"target\").`}</p></section>\n    <section><h3 parentName=\"section\">{`REQUEST`}</h3><p parentName=\"section\"><inlineCode parentName=\"p\">{`GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getWork`}</inlineCode></p></section>\n    <section><h4 parentName=\"section\">{`HEADERS`}</h4><p parentName=\"section\"><inlineCode parentName=\"p\">{`Content-Type: application/json`}</inlineCode></p></section>\n    <section><h4 parentName=\"section\">{`EXAMPLE`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}>{`// HTTP GET\ncurl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getWork\n\n// HTTP POST\ncurl https://mainnet.backbonecabal.xyz/ \\\\\n    -X POST \\\\\n    -H \"Content-Type: application/json\" \\\\\n    -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\": [],\"id\":1}'\n\n// WEBSOCKETS\n>wscat -c wss://mainnet.backbonecabal.xyz/ws\n>{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\": [],\"id\":1}\n`}</code></pre></section>\n    <section><h3 parentName=\"section\">{`RESPONSE`}</h3></section>\n    <section><h4 parentName=\"section\">{`RESULT FIELDS`}</h4><ul parentName=\"section\">\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`WORK ARRAY`}</inlineCode><ul parentName=\"li\">\n            <li parentName=\"ul\">{`32 Bytes - current block header pow-hash`}</li>\n            <li parentName=\"ul\">{`32 Bytes - the seed hash used for the DAG.`}</li>\n            <li parentName=\"ul\">{`32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.`}</li>\n          </ul></li>\n      </ul></section>\n    <section><h4 parentName=\"section\">{`BODY`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`{\n  \"id\":1,\n  \"jsonrpc\":\"2.0\",\n  \"result\": [\n      \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n      \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\",\n      \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\"\n    ]\n}\n`}</code></pre></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"
  }
}
