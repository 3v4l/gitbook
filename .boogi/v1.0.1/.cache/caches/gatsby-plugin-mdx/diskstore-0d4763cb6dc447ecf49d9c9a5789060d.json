{
  "expireTime": 9007200869051276000,
  "key": "gatsby-plugin-mdx-entire-payload-7d12bcaf76f0a73549e8748a3e472631-",
  "val": {
    "mdast": {
      "type": "root",
      "children": [
        {
          "type": "jsx",
          "value": "<!-- order:196 -->",
          "position": {
            "start": { "line": 1, "column": 1, "offset": 0 },
            "end": { "line": 1, "column": 19, "offset": 18 },
            "indent": []
          }
        },
        {
          "type": "heading",
          "depth": 4,
          "children": [
            {
              "type": "text",
              "value": "Parameters",
              "position": {
                "start": { "line": 3, "column": 6, "offset": 25 },
                "end": { "line": 3, "column": 16, "offset": 35 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 3, "column": 1, "offset": 20 },
            "end": { "line": 3, "column": 16, "offset": 35 },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "inlineCode",
              "value": "quantity|tag",
              "position": {
                "start": { "line": 5, "column": 1, "offset": 37 },
                "end": { "line": 5, "column": 15, "offset": 51 },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " - Integer representing a block number or one of the string tags ",
              "position": {
                "start": { "line": 5, "column": 15, "offset": 51 },
                "end": { "line": 5, "column": 80, "offset": 116 },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "latest",
              "position": {
                "start": { "line": 5, "column": 80, "offset": 116 },
                "end": { "line": 5, "column": 88, "offset": 124 },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": { "line": 5, "column": 88, "offset": 124 },
                "end": { "line": 5, "column": 90, "offset": 126 },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "earliest",
              "position": {
                "start": { "line": 5, "column": 90, "offset": 126 },
                "end": { "line": 5, "column": 100, "offset": 136 },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", or ",
              "position": {
                "start": { "line": 5, "column": 100, "offset": 136 },
                "end": { "line": 5, "column": 105, "offset": 141 },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pending",
              "position": {
                "start": { "line": 5, "column": 105, "offset": 141 },
                "end": { "line": 5, "column": 114, "offset": 150 },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", as\ndescribed in\n",
              "position": {
                "start": { "line": 5, "column": 114, "offset": 150 },
                "end": { "line": 7, "column": 1, "offset": 168 },
                "indent": [1, 1]
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://besu.hyperledger.org/en/stable/HowTo/Interact/APIs/Using-JSON-RPC-API#block-parameter",
              "children": [
                {
                  "type": "text",
                  "value": "Block Parameter",
                  "position": {
                    "start": { "line": 7, "column": 2, "offset": 169 },
                    "end": { "line": 7, "column": 17, "offset": 184 },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": { "line": 7, "column": 1, "offset": 168 },
                "end": { "line": 7, "column": 113, "offset": 280 },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": { "line": 7, "column": 113, "offset": 280 },
                "end": { "line": 7, "column": 114, "offset": 281 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 5, "column": 1, "offset": 37 },
            "end": { "line": 7, "column": 114, "offset": 281 },
            "indent": [1, 1]
          }
        },
        {
          "type": "export",
          "value": "export const _frontmatter = {}",
          "position": {
            "start": { "line": 10, "column": 1, "offset": 284 },
            "end": { "line": 10, "column": 31, "offset": 314 },
            "indent": []
          }
        }
      ],
      "position": {
        "start": { "line": 1, "column": 1, "offset": 0 },
        "end": { "line": 10, "column": 31, "offset": 314 }
      }
    },
    "scopeImports": ["import * as React from 'react'"],
    "scopeIdentifiers": ["React"],
    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Parameters\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"quantity|tag\"), \" - Integer representing a block number or one of the string tags \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"latest\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"earliest\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pending\"), \", as\\ndescribed in\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://besu.hyperledger.org/en/stable/HowTo/Interact/APIs/Using-JSON-RPC-API#block-parameter\"\n  }), \"Block Parameter\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;",
    "rawMDXOutput": "/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    {\n      /* order:196 */\n    }\n    <section><h4 parentName=\"section\">{`Parameters`}</h4><p parentName=\"section\"><inlineCode parentName=\"p\">{`quantity|tag`}</inlineCode>{` - Integer representing a block number or one of the string tags `}<inlineCode parentName=\"p\">{`latest`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`earliest`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`pending`}</inlineCode>{`, as\ndescribed in\n`}<a parentName=\"p\" {...{\n          \"href\": \"https://besu.hyperledger.org/en/stable/HowTo/Interact/APIs/Using-JSON-RPC-API#block-parameter\"\n        }}>{`Block Parameter`}</a>{`.`}</p></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"
  }
}
