{"expireTime":9007200869051275000,"key":"gatsby-plugin-mdx-entire-payload-fe9a71a2ec88368966616d83c94eeb2e-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"eth_getUncleByBlockNumberAndIndex","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":36,"offset":35},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":36,"offset":35},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex","position":{"start":{"line":3,"column":4,"offset":40},"end":{"line":3,"column":58,"offset":94},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":37},"end":{"line":3,"column":58,"offset":94},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Returns information about the 'Uncle' of a block by hash and the Uncle index position.","position":{"start":{"line":5,"column":1,"offset":96},"end":{"line":5,"column":87,"offset":182},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":96},"end":{"line":5,"column":87,"offset":182},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"REQUEST","position":{"start":{"line":7,"column":5,"offset":188},"end":{"line":7,"column":12,"offset":195},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":184},"end":{"line":7,"column":12,"offset":195},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex?params=:paramsJSONArray","position":{"start":{"line":9,"column":1,"offset":197},"end":{"line":9,"column":114,"offset":310},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":197},"end":{"line":9,"column":114,"offset":310},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"HEADERS","position":{"start":{"line":11,"column":6,"offset":317},"end":{"line":11,"column":13,"offset":324},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":312},"end":{"line":11,"column":13,"offset":324},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Content-Type: application/json","position":{"start":{"line":13,"column":1,"offset":326},"end":{"line":13,"column":33,"offset":358},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":326},"end":{"line":13,"column":33,"offset":358},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"REQUEST PARAMS","position":{"start":{"line":15,"column":6,"offset":365},"end":{"line":15,"column":20,"offset":379},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":360},"end":{"line":15,"column":20,"offset":379},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"BLOCK PARAMETER","position":{"start":{"line":17,"column":5,"offset":385},"end":{"line":17,"column":22,"offset":402},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":17,"column":22,"offset":402},"end":{"line":17,"column":23,"offset":403},"indent":[]}},{"type":"emphasis","children":[{"type":"linkReference","identifier":"required","label":"required","referenceType":"shortcut","children":[{"type":"text","value":"required","position":{"start":{"line":17,"column":25,"offset":405},"end":{"line":17,"column":33,"offset":413},"indent":[]}}],"position":{"start":{"line":17,"column":24,"offset":404},"end":{"line":17,"column":34,"offset":414},"indent":[]}}],"position":{"start":{"line":17,"column":23,"offset":403},"end":{"line":17,"column":35,"offset":415},"indent":[]}},{"type":"text","value":" - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the\n","position":{"start":{"line":17,"column":35,"offset":415},"end":{"line":18,"column":5,"offset":504},"indent":[5]}},{"type":"link","title":null,"url":"https://github.com/ethereum/wiki/wiki/JSON-RPC#the-default-block-parameter","children":[{"type":"text","value":"default block parameter","position":{"start":{"line":18,"column":6,"offset":505},"end":{"line":18,"column":29,"offset":528},"indent":[]}}],"position":{"start":{"line":18,"column":5,"offset":504},"end":{"line":18,"column":106,"offset":605},"indent":[]}}],"position":{"start":{"line":17,"column":5,"offset":385},"end":{"line":18,"column":106,"offset":605},"indent":[5]}}],"position":{"start":{"line":17,"column":1,"offset":381},"end":{"line":18,"column":106,"offset":605},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"UNCLE INDEX POSITION","position":{"start":{"line":19,"column":5,"offset":610},"end":{"line":19,"column":27,"offset":632},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":19,"column":27,"offset":632},"end":{"line":19,"column":28,"offset":633},"indent":[]}},{"type":"emphasis","children":[{"type":"linkReference","identifier":"required","label":"required","referenceType":"shortcut","children":[{"type":"text","value":"required","position":{"start":{"line":19,"column":30,"offset":635},"end":{"line":19,"column":38,"offset":643},"indent":[]}}],"position":{"start":{"line":19,"column":29,"offset":634},"end":{"line":19,"column":39,"offset":644},"indent":[]}}],"position":{"start":{"line":19,"column":28,"offset":633},"end":{"line":19,"column":40,"offset":645},"indent":[]}},{"type":"text","value":" - a hex of the integer indicating the uncle's index position.","position":{"start":{"line":19,"column":40,"offset":645},"end":{"line":19,"column":102,"offset":707},"indent":[]}}],"position":{"start":{"line":19,"column":5,"offset":610},"end":{"line":19,"column":102,"offset":707},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":606},"end":{"line":19,"column":102,"offset":707},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":381},"end":{"line":19,"column":102,"offset":707},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"EXAMPLE","position":{"start":{"line":21,"column":6,"offset":714},"end":{"line":21,"column":13,"offset":721},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":709},"end":{"line":21,"column":13,"offset":721},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"// HTTP GET\ncurl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleByBlockNumberAndIndex --data-urlencode 'params=[\"0x29c\",\"0x0\"]'\n\n// HTTP POST\ncurl https://mainnet.backbonecabal.xyz/ \\\n    -X POST \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\": [\"0x29c\",\"0x0\"],\"id\":1}'\n\n// WEBSOCKETS\n>wscat -c wss://mainnet.backbonecabal.xyz/ws\n>{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\": [\"0x29c\",\"0x0\"],\"id\":1}","position":{"start":{"line":23,"column":1,"offset":723},"end":{"line":36,"column":4,"offset":1253},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"RESPONSE","position":{"start":{"line":38,"column":5,"offset":1259},"end":{"line":38,"column":13,"offset":1267},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1255},"end":{"line":38,"column":13,"offset":1267},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"RESULT FIELDS","position":{"start":{"line":40,"column":6,"offset":1274},"end":{"line":40,"column":19,"offset":1287},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1269},"end":{"line":40,"column":19,"offset":1287},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"BLOCK","position":{"start":{"line":42,"column":5,"offset":1293},"end":{"line":42,"column":12,"offset":1300},"indent":[]}},{"type":"text","value":" - A block object, or null when no block was found","position":{"start":{"line":42,"column":12,"offset":1300},"end":{"line":42,"column":62,"offset":1350},"indent":[]}}],"position":{"start":{"line":42,"column":5,"offset":1293},"end":{"line":42,"column":62,"offset":1350},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"number","position":{"start":{"line":43,"column":9,"offset":1359},"end":{"line":43,"column":17,"offset":1367},"indent":[]}},{"type":"text","value":": the block number. null when its pending block.","position":{"start":{"line":43,"column":17,"offset":1367},"end":{"line":43,"column":65,"offset":1415},"indent":[]}}],"position":{"start":{"line":43,"column":9,"offset":1359},"end":{"line":43,"column":65,"offset":1415},"indent":[]}}],"position":{"start":{"line":43,"column":5,"offset":1355},"end":{"line":43,"column":65,"offset":1415},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"hash","position":{"start":{"line":44,"column":9,"offset":1424},"end":{"line":44,"column":15,"offset":1430},"indent":[]}},{"type":"text","value":": 32 Bytes - hash of the block. null when its pending block.","position":{"start":{"line":44,"column":15,"offset":1430},"end":{"line":44,"column":75,"offset":1490},"indent":[]}}],"position":{"start":{"line":44,"column":9,"offset":1424},"end":{"line":44,"column":75,"offset":1490},"indent":[]}}],"position":{"start":{"line":44,"column":5,"offset":1420},"end":{"line":44,"column":75,"offset":1490},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"parentHash","position":{"start":{"line":45,"column":9,"offset":1499},"end":{"line":45,"column":21,"offset":1511},"indent":[]}},{"type":"text","value":": 32 Bytes - hash of the parent block.","position":{"start":{"line":45,"column":21,"offset":1511},"end":{"line":45,"column":59,"offset":1549},"indent":[]}}],"position":{"start":{"line":45,"column":9,"offset":1499},"end":{"line":45,"column":59,"offset":1549},"indent":[]}}],"position":{"start":{"line":45,"column":5,"offset":1495},"end":{"line":45,"column":59,"offset":1549},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"nonce","position":{"start":{"line":46,"column":9,"offset":1558},"end":{"line":46,"column":16,"offset":1565},"indent":[]}},{"type":"text","value":": 8 Bytes - hash of the generated proof-of-work. null when its pending block.","position":{"start":{"line":46,"column":16,"offset":1565},"end":{"line":46,"column":93,"offset":1642},"indent":[]}}],"position":{"start":{"line":46,"column":9,"offset":1558},"end":{"line":46,"column":93,"offset":1642},"indent":[]}}],"position":{"start":{"line":46,"column":5,"offset":1554},"end":{"line":46,"column":93,"offset":1642},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"sha3Uncles","position":{"start":{"line":47,"column":9,"offset":1651},"end":{"line":47,"column":21,"offset":1663},"indent":[]}},{"type":"text","value":": 32 Bytes - SHA3 of the uncles data in the block.","position":{"start":{"line":47,"column":21,"offset":1663},"end":{"line":47,"column":71,"offset":1713},"indent":[]}}],"position":{"start":{"line":47,"column":9,"offset":1651},"end":{"line":47,"column":71,"offset":1713},"indent":[]}}],"position":{"start":{"line":47,"column":5,"offset":1647},"end":{"line":47,"column":71,"offset":1713},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"logsBloom","position":{"start":{"line":48,"column":9,"offset":1722},"end":{"line":48,"column":20,"offset":1733},"indent":[]}},{"type":"text","value":": 256 Bytes - the bloom filter for the logs of the block. null when its pending block.","position":{"start":{"line":48,"column":20,"offset":1733},"end":{"line":48,"column":106,"offset":1819},"indent":[]}}],"position":{"start":{"line":48,"column":9,"offset":1722},"end":{"line":48,"column":106,"offset":1819},"indent":[]}}],"position":{"start":{"line":48,"column":5,"offset":1718},"end":{"line":48,"column":106,"offset":1819},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"transactionsRoot","position":{"start":{"line":49,"column":9,"offset":1828},"end":{"line":49,"column":27,"offset":1846},"indent":[]}},{"type":"text","value":": 32 Bytes - the root of the transaction trie of the block.","position":{"start":{"line":49,"column":27,"offset":1846},"end":{"line":49,"column":86,"offset":1905},"indent":[]}}],"position":{"start":{"line":49,"column":9,"offset":1828},"end":{"line":49,"column":86,"offset":1905},"indent":[]}}],"position":{"start":{"line":49,"column":5,"offset":1824},"end":{"line":49,"column":86,"offset":1905},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"stateRoot","position":{"start":{"line":50,"column":9,"offset":1914},"end":{"line":50,"column":20,"offset":1925},"indent":[]}},{"type":"text","value":": 32 Bytes - the root of the final state trie of the block.","position":{"start":{"line":50,"column":20,"offset":1925},"end":{"line":50,"column":79,"offset":1984},"indent":[]}}],"position":{"start":{"line":50,"column":9,"offset":1914},"end":{"line":50,"column":79,"offset":1984},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":1910},"end":{"line":50,"column":79,"offset":1984},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"receiptsRoot","position":{"start":{"line":51,"column":9,"offset":1993},"end":{"line":51,"column":23,"offset":2007},"indent":[]}},{"type":"text","value":": 32 Bytes - the root of the receipts trie of the block.","position":{"start":{"line":51,"column":23,"offset":2007},"end":{"line":51,"column":79,"offset":2063},"indent":[]}}],"position":{"start":{"line":51,"column":9,"offset":1993},"end":{"line":51,"column":79,"offset":2063},"indent":[]}}],"position":{"start":{"line":51,"column":5,"offset":1989},"end":{"line":51,"column":79,"offset":2063},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"miner","position":{"start":{"line":52,"column":9,"offset":2072},"end":{"line":52,"column":16,"offset":2079},"indent":[]}},{"type":"text","value":": 20 Bytes - the address of the beneficiary to whom the mining rewards were given.","position":{"start":{"line":52,"column":16,"offset":2079},"end":{"line":52,"column":98,"offset":2161},"indent":[]}}],"position":{"start":{"line":52,"column":9,"offset":2072},"end":{"line":52,"column":98,"offset":2161},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":2068},"end":{"line":52,"column":98,"offset":2161},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"difficulty","position":{"start":{"line":53,"column":9,"offset":2170},"end":{"line":53,"column":21,"offset":2182},"indent":[]}},{"type":"text","value":": integer of the difficulty for this block.","position":{"start":{"line":53,"column":21,"offset":2182},"end":{"line":53,"column":64,"offset":2225},"indent":[]}}],"position":{"start":{"line":53,"column":9,"offset":2170},"end":{"line":53,"column":64,"offset":2225},"indent":[]}}],"position":{"start":{"line":53,"column":5,"offset":2166},"end":{"line":53,"column":64,"offset":2225},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"totalDifficulty","position":{"start":{"line":54,"column":9,"offset":2234},"end":{"line":54,"column":26,"offset":2251},"indent":[]}},{"type":"text","value":": integer of the total difficulty of the chain until this block.","position":{"start":{"line":54,"column":26,"offset":2251},"end":{"line":54,"column":90,"offset":2315},"indent":[]}}],"position":{"start":{"line":54,"column":9,"offset":2234},"end":{"line":54,"column":90,"offset":2315},"indent":[]}}],"position":{"start":{"line":54,"column":5,"offset":2230},"end":{"line":54,"column":90,"offset":2315},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"extraData","position":{"start":{"line":55,"column":9,"offset":2324},"end":{"line":55,"column":20,"offset":2335},"indent":[]}},{"type":"text","value":": the \"extra data\" field of this block.","position":{"start":{"line":55,"column":20,"offset":2335},"end":{"line":55,"column":59,"offset":2374},"indent":[]}}],"position":{"start":{"line":55,"column":9,"offset":2324},"end":{"line":55,"column":59,"offset":2374},"indent":[]}}],"position":{"start":{"line":55,"column":5,"offset":2320},"end":{"line":55,"column":59,"offset":2374},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"size","position":{"start":{"line":56,"column":9,"offset":2383},"end":{"line":56,"column":15,"offset":2389},"indent":[]}},{"type":"text","value":": integer the size of this block in bytes.","position":{"start":{"line":56,"column":15,"offset":2389},"end":{"line":56,"column":57,"offset":2431},"indent":[]}}],"position":{"start":{"line":56,"column":9,"offset":2383},"end":{"line":56,"column":57,"offset":2431},"indent":[]}}],"position":{"start":{"line":56,"column":5,"offset":2379},"end":{"line":56,"column":57,"offset":2431},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"gasLimit","position":{"start":{"line":57,"column":9,"offset":2440},"end":{"line":57,"column":19,"offset":2450},"indent":[]}},{"type":"text","value":": the maximum gas allowed in this block.","position":{"start":{"line":57,"column":19,"offset":2450},"end":{"line":57,"column":59,"offset":2490},"indent":[]}}],"position":{"start":{"line":57,"column":9,"offset":2440},"end":{"line":57,"column":59,"offset":2490},"indent":[]}}],"position":{"start":{"line":57,"column":5,"offset":2436},"end":{"line":57,"column":59,"offset":2490},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"gasUsed","position":{"start":{"line":58,"column":9,"offset":2499},"end":{"line":58,"column":18,"offset":2508},"indent":[]}},{"type":"text","value":": the total used gas by all transactions in this block.","position":{"start":{"line":58,"column":18,"offset":2508},"end":{"line":58,"column":73,"offset":2563},"indent":[]}}],"position":{"start":{"line":58,"column":9,"offset":2499},"end":{"line":58,"column":73,"offset":2563},"indent":[]}}],"position":{"start":{"line":58,"column":5,"offset":2495},"end":{"line":58,"column":73,"offset":2563},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"timestamp","position":{"start":{"line":59,"column":9,"offset":2572},"end":{"line":59,"column":20,"offset":2583},"indent":[]}},{"type":"text","value":": the unix timestamp for when the block was collated.","position":{"start":{"line":59,"column":20,"offset":2583},"end":{"line":59,"column":73,"offset":2636},"indent":[]}}],"position":{"start":{"line":59,"column":9,"offset":2572},"end":{"line":59,"column":73,"offset":2636},"indent":[]}}],"position":{"start":{"line":59,"column":5,"offset":2568},"end":{"line":59,"column":73,"offset":2636},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"uncles","position":{"start":{"line":60,"column":9,"offset":2645},"end":{"line":60,"column":17,"offset":2653},"indent":[]}},{"type":"text","value":": an Array of uncle hashes.","position":{"start":{"line":60,"column":17,"offset":2653},"end":{"line":60,"column":44,"offset":2680},"indent":[]}}],"position":{"start":{"line":60,"column":9,"offset":2645},"end":{"line":60,"column":44,"offset":2680},"indent":[]}}],"position":{"start":{"line":60,"column":5,"offset":2641},"end":{"line":60,"column":44,"offset":2680},"indent":[]}}],"position":{"start":{"line":43,"column":5,"offset":1355},"end":{"line":60,"column":44,"offset":2680},"indent":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":42,"column":1,"offset":1289},"end":{"line":60,"column":44,"offset":2680},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":42,"column":1,"offset":1289},"end":{"line":60,"column":44,"offset":2680},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: An uncle doesn't contain individual transactions.","position":{"start":{"line":62,"column":1,"offset":2682},"end":{"line":62,"column":56,"offset":2737},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2682},"end":{"line":62,"column":56,"offset":2737},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"BODY","position":{"start":{"line":64,"column":6,"offset":2744},"end":{"line":64,"column":10,"offset":2748},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2739},"end":{"line":64,"column":10,"offset":2748},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n\t\"jsonrpc\": \"2.0\",\n\t\"id\": 1,\n\t\"result\": {\n\t\t\"difficulty\": \"0xbfabcdbd93dda\",\n\t\t\"extraData\": \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\",\n\t\t\"gasLimit\": \"0x79f39e\",\n\t\t\"gasUsed\": \"0x79ccd3\",\n\t\t\"hash\": \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\n\t\t\"logsBloom\": \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\",\n\t\t\"miner\": \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\",\n\t\t\"mixHash\": \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\",\n\t\t\"nonce\": \"0x4db7a1c01d8a8072\",\n\t\t\"number\": \"0x5bad55\",\n\t\t\"parentHash\": \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\",\n\t\t\"receiptsRoot\": \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\",\n\t\t\"sha3Uncles\": \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\",\n\t\t\"size\": \"0x41c7\",\n\t\t\"stateRoot\": \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\",\n\t\t\"timestamp\": \"0x5b541449\",\n\t\t\"totalDifficulty\": \"0x12ac11391a2f3872fcd\",\n\t\t\"transactionsRoot\": \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\",\n\t\t\"uncles\": []\n\t}\n}","position":{"start":{"line":66,"column":1,"offset":2750},"end":{"line":92,"column":4,"offset":4314},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":95,"column":1,"offset":4317},"end":{"line":95,"column":31,"offset":4347},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":95,"column":31,"offset":4347}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"eth_getUncleByBlockNumberAndIndex\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Returns information about the 'Uncle' of a block by hash and the Uncle index position.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"REQUEST\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex?params=:paramsJSONArray\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"HEADERS\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Content-Type: application/json\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"REQUEST PARAMS\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"BLOCK PARAMETER\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[required]\"), \" - an integer block number, or the string \\\"latest\\\", \\\"earliest\\\" or \\\"pending\\\", see the\\n\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/ethereum/wiki/wiki/JSON-RPC#the-default-block-parameter\"\n  }), \"default block parameter\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"UNCLE INDEX POSITION\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[required]\"), \" - a hex of the integer indicating the uncle's index position.\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"EXAMPLE\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"// HTTP GET\\ncurl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleByBlockNumberAndIndex --data-urlencode 'params=[\\\"0x29c\\\",\\\"0x0\\\"]'\\n\\n// HTTP POST\\ncurl https://mainnet.backbonecabal.xyz/ \\\\\\n    -X POST \\\\\\n    -H \\\"Content-Type: application/json\\\" \\\\\\n    -d '{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getUncleByBlockNumberAndIndex\\\",\\\"params\\\": [\\\"0x29c\\\",\\\"0x0\\\"],\\\"id\\\":1}'\\n\\n// WEBSOCKETS\\n>wscat -c wss://mainnet.backbonecabal.xyz/ws\\n>{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getUncleByBlockNumberAndIndex\\\",\\\"params\\\": [\\\"0x29c\\\",\\\"0x0\\\"],\\\"id\\\":1}\\n\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"RESPONSE\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"RESULT FIELDS\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"BLOCK\"), \" - A block object, or null when no block was found\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"number\"), \": the block number. null when its pending block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hash\"), \": 32 Bytes - hash of the block. null when its pending block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"parentHash\"), \": 32 Bytes - hash of the parent block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nonce\"), \": 8 Bytes - hash of the generated proof-of-work. null when its pending block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sha3Uncles\"), \": 32 Bytes - SHA3 of the uncles data in the block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"logsBloom\"), \": 256 Bytes - the bloom filter for the logs of the block. null when its pending block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"transactionsRoot\"), \": 32 Bytes - the root of the transaction trie of the block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"stateRoot\"), \": 32 Bytes - the root of the final state trie of the block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"receiptsRoot\"), \": 32 Bytes - the root of the receipts trie of the block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"miner\"), \": 20 Bytes - the address of the beneficiary to whom the mining rewards were given.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"difficulty\"), \": integer of the difficulty for this block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"totalDifficulty\"), \": integer of the total difficulty of the chain until this block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"extraData\"), \": the \\\"extra data\\\" field of this block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"size\"), \": integer the size of this block in bytes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gasLimit\"), \": the maximum gas allowed in this block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gasUsed\"), \": the total used gas by all transactions in this block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"timestamp\"), \": the unix timestamp for when the block was collated.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"uncles\"), \": an Array of uncle hashes.\")))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Note: An uncle doesn't contain individual transactions.\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"BODY\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"jsonrpc\\\": \\\"2.0\\\",\\n    \\\"id\\\": 1,\\n    \\\"result\\\": {\\n        \\\"difficulty\\\": \\\"0xbfabcdbd93dda\\\",\\n        \\\"extraData\\\": \\\"0x737061726b706f6f6c2d636e2d6e6f64652d3132\\\",\\n        \\\"gasLimit\\\": \\\"0x79f39e\\\",\\n        \\\"gasUsed\\\": \\\"0x79ccd3\\\",\\n        \\\"hash\\\": \\\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\\\",\\n        \\\"logsBloom\\\": \\\"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\\\",\\n        \\\"miner\\\": \\\"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\\\",\\n        \\\"mixHash\\\": \\\"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\\\",\\n        \\\"nonce\\\": \\\"0x4db7a1c01d8a8072\\\",\\n        \\\"number\\\": \\\"0x5bad55\\\",\\n        \\\"parentHash\\\": \\\"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\\\",\\n        \\\"receiptsRoot\\\": \\\"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\\\",\\n        \\\"sha3Uncles\\\": \\\"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\\\",\\n        \\\"size\\\": \\\"0x41c7\\\",\\n        \\\"stateRoot\\\": \\\"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\\\",\\n        \\\"timestamp\\\": \\\"0x5b541449\\\",\\n        \\\"totalDifficulty\\\": \\\"0x12ac11391a2f3872fcd\\\",\\n        \\\"transactionsRoot\\\": \\\"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\\\",\\n        \\\"uncles\\\": []\\n    }\\n}\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h1 parentName=\"section\">{`eth_getUncleByBlockNumberAndIndex`}</h1></section>\n    <section><h2 parentName=\"section\">{`/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex`}</h2><p parentName=\"section\">{`Returns information about the 'Uncle' of a block by hash and the Uncle index position.`}</p></section>\n    <section><h3 parentName=\"section\">{`REQUEST`}</h3><p parentName=\"section\"><inlineCode parentName=\"p\">{`GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex?params=:paramsJSONArray`}</inlineCode></p></section>\n    <section><h4 parentName=\"section\">{`HEADERS`}</h4><p parentName=\"section\"><inlineCode parentName=\"p\">{`Content-Type: application/json`}</inlineCode></p></section>\n    <section><h4 parentName=\"section\">{`REQUEST PARAMS`}</h4><ul parentName=\"section\">\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`BLOCK PARAMETER`}</inlineCode>{` `}<em parentName=\"li\">{`[required]`}</em>{` - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the\n`}<a parentName=\"li\" {...{\n            \"href\": \"https://github.com/ethereum/wiki/wiki/JSON-RPC#the-default-block-parameter\"\n          }}>{`default block parameter`}</a></li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`UNCLE INDEX POSITION`}</inlineCode>{` `}<em parentName=\"li\">{`[required]`}</em>{` - a hex of the integer indicating the uncle's index position.`}</li>\n      </ul></section>\n    <section><h4 parentName=\"section\">{`EXAMPLE`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}>{`// HTTP GET\ncurl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleByBlockNumberAndIndex --data-urlencode 'params=[\"0x29c\",\"0x0\"]'\n\n// HTTP POST\ncurl https://mainnet.backbonecabal.xyz/ \\\\\n    -X POST \\\\\n    -H \"Content-Type: application/json\" \\\\\n    -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\": [\"0x29c\",\"0x0\"],\"id\":1}'\n\n// WEBSOCKETS\n>wscat -c wss://mainnet.backbonecabal.xyz/ws\n>{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\": [\"0x29c\",\"0x0\"],\"id\":1}\n`}</code></pre></section>\n    <section><h3 parentName=\"section\">{`RESPONSE`}</h3></section>\n    <section><h4 parentName=\"section\">{`RESULT FIELDS`}</h4><ul parentName=\"section\">\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`BLOCK`}</inlineCode>{` - A block object, or null when no block was found`}<ul parentName=\"li\">\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`number`}</inlineCode>{`: the block number. null when its pending block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`hash`}</inlineCode>{`: 32 Bytes - hash of the block. null when its pending block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parentHash`}</inlineCode>{`: 32 Bytes - hash of the parent block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nonce`}</inlineCode>{`: 8 Bytes - hash of the generated proof-of-work. null when its pending block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sha3Uncles`}</inlineCode>{`: 32 Bytes - SHA3 of the uncles data in the block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`logsBloom`}</inlineCode>{`: 256 Bytes - the bloom filter for the logs of the block. null when its pending block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`transactionsRoot`}</inlineCode>{`: 32 Bytes - the root of the transaction trie of the block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`stateRoot`}</inlineCode>{`: 32 Bytes - the root of the final state trie of the block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`receiptsRoot`}</inlineCode>{`: 32 Bytes - the root of the receipts trie of the block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`miner`}</inlineCode>{`: 20 Bytes - the address of the beneficiary to whom the mining rewards were given.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`difficulty`}</inlineCode>{`: integer of the difficulty for this block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`totalDifficulty`}</inlineCode>{`: integer of the total difficulty of the chain until this block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`extraData`}</inlineCode>{`: the \"extra data\" field of this block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`size`}</inlineCode>{`: integer the size of this block in bytes.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`gasLimit`}</inlineCode>{`: the maximum gas allowed in this block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`gasUsed`}</inlineCode>{`: the total used gas by all transactions in this block.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`timestamp`}</inlineCode>{`: the unix timestamp for when the block was collated.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`uncles`}</inlineCode>{`: an Array of uncle hashes.`}</li>\n          </ul></li>\n      </ul><p parentName=\"section\">{`Note: An uncle doesn't contain individual transactions.`}</p></section>\n    <section><h4 parentName=\"section\">{`BODY`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-json\"\n        }}>{`{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"difficulty\": \"0xbfabcdbd93dda\",\n        \"extraData\": \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\",\n        \"gasLimit\": \"0x79f39e\",\n        \"gasUsed\": \"0x79ccd3\",\n        \"hash\": \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\n        \"logsBloom\": \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\",\n        \"miner\": \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\",\n        \"mixHash\": \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\",\n        \"nonce\": \"0x4db7a1c01d8a8072\",\n        \"number\": \"0x5bad55\",\n        \"parentHash\": \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\",\n        \"receiptsRoot\": \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\",\n        \"sha3Uncles\": \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\",\n        \"size\": \"0x41c7\",\n        \"stateRoot\": \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\",\n        \"timestamp\": \"0x5b541449\",\n        \"totalDifficulty\": \"0x12ac11391a2f3872fcd\",\n        \"transactionsRoot\": \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\",\n        \"uncles\": []\n    }\n}\n`}</code></pre></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}