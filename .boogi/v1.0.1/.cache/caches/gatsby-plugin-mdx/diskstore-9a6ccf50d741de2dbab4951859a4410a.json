{
  "expireTime": 9007200869051276000,
  "key": "gatsby-plugin-mdx-entire-payload-e9bfd203d140d8bbad0930bec1914d65-",
  "val": {
    "mdast": {
      "type": "root",
      "children": [
        {
          "type": "heading",
          "depth": 1,
          "children": [
            {
              "type": "text",
              "value": "Make Requests",
              "position": {
                "start": { "line": 1, "column": 3, "offset": 2 },
                "end": { "line": 1, "column": 16, "offset": 15 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 1, "column": 1, "offset": 0 },
            "end": { "line": 1, "column": 16, "offset": 15 },
            "indent": []
          }
        },
        {
          "type": "heading",
          "depth": 3,
          "children": [
            {
              "type": "text",
              "value": "JSON-RPC Methods",
              "position": {
                "start": { "line": 3, "column": 5, "offset": 21 },
                "end": { "line": 3, "column": 21, "offset": 37 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 3, "column": 1, "offset": 17 },
            "end": { "line": 3, "column": 21, "offset": 37 },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Below is a quick command line example using CURL:",
              "position": {
                "start": { "line": 5, "column": 1, "offset": 39 },
                "end": { "line": 5, "column": 50, "offset": 88 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 5, "column": 1, "offset": 39 },
            "end": { "line": 5, "column": 50, "offset": 88 },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": null,
          "meta": null,
          "value": "$ curl -X POST\n-H \"Content-Type: application/json\"\n--data '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"eth_blockNumber\",\n\"params\": []}'\n\"https://mainnet.backbonecabal.xyz/YOUR-API-KEY\"",
          "position": {
            "start": { "line": 7, "column": 1, "offset": 90 },
            "end": { "line": 13, "column": 4, "offset": 277 },
            "indent": [1, 1, 1, 1, 1, 1]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The result should look something like this:",
              "position": {
                "start": { "line": 15, "column": 1, "offset": 279 },
                "end": { "line": 15, "column": 44, "offset": 322 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 15, "column": 1, "offset": 279 },
            "end": { "line": 15, "column": 44, "offset": 322 },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": null,
          "meta": null,
          "value": "$ {\"jsonrpc\": \"2.0\",\"result\": \"0x3ccb11\", \"id\":1}",
          "position": {
            "start": { "line": 17, "column": 1, "offset": 324 },
            "end": { "line": 19, "column": 4, "offset": 381 },
            "indent": [1, 1]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "strong",
              "children": [
                {
                  "type": "text",
                  "value": "NOTE:",
                  "position": {
                    "start": { "line": 21, "column": 3, "offset": 385 },
                    "end": { "line": 21, "column": 8, "offset": 390 },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": { "line": 21, "column": 1, "offset": 383 },
                "end": { "line": 21, "column": 10, "offset": 392 },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " \"0x3ccb11\" will be replaced with the block number of the most recent block on that network",
              "position": {
                "start": { "line": 21, "column": 10, "offset": 392 },
                "end": { "line": 21, "column": 101, "offset": 483 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 21, "column": 1, "offset": 383 },
            "end": { "line": 21, "column": 101, "offset": 483 },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/ethereum/wiki/wiki/JSON-RPC",
              "children": [
                {
                  "type": "text",
                  "value": "Read more about JSON RPC",
                  "position": {
                    "start": { "line": 23, "column": 2, "offset": 486 },
                    "end": { "line": 23, "column": 26, "offset": 510 },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": { "line": 23, "column": 1, "offset": 485 },
                "end": { "line": 23, "column": 75, "offset": 559 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 23, "column": 1, "offset": 485 },
            "end": { "line": 23, "column": 75, "offset": 559 },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Important to note that JSON-RPC is transport agnostic, meaning same concepts can be used over HTTP, WebSockets or other\nmessage passing environments. All JSON_RPC methods listed in 'Ethereum API' are also supported over websockets.",
              "position": {
                "start": { "line": 25, "column": 1, "offset": 561 },
                "end": { "line": 26, "column": 112, "offset": 792 },
                "indent": [1]
              }
            }
          ],
          "position": {
            "start": { "line": 25, "column": 1, "offset": 561 },
            "end": { "line": 26, "column": 112, "offset": 792 },
            "indent": [1]
          }
        },
        {
          "type": "heading",
          "depth": 3,
          "children": [
            {
              "type": "text",
              "value": "Rest-like Backbone API",
              "position": {
                "start": { "line": 28, "column": 5, "offset": 798 },
                "end": { "line": 28, "column": 27, "offset": 820 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 28, "column": 1, "offset": 794 },
            "end": { "line": 28, "column": 27, "offset": 820 },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": null,
          "meta": null,
          "value": "https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber?token=YOUR-API-KEY",
          "position": {
            "start": { "line": 30, "column": 1, "offset": 822 },
            "end": { "line": 32, "column": 4, "offset": 913 },
            "indent": [1, 1]
          }
        },
        {
          "type": "heading",
          "depth": 3,
          "children": [
            {
              "type": "text",
              "value": "Subscriptions and Filters",
              "position": {
                "start": { "line": 34, "column": 5, "offset": 919 },
                "end": { "line": 34, "column": 30, "offset": 944 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 34, "column": 1, "offset": 915 },
            "end": { "line": 34, "column": 30, "offset": 944 },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "TODO",
              "position": {
                "start": { "line": 36, "column": 1, "offset": 946 },
                "end": { "line": 36, "column": 5, "offset": 950 },
                "indent": []
              }
            }
          ],
          "position": {
            "start": { "line": 36, "column": 1, "offset": 946 },
            "end": { "line": 36, "column": 5, "offset": 950 },
            "indent": []
          }
        },
        {
          "type": "export",
          "value": "export const _frontmatter = {}",
          "position": {
            "start": { "line": 39, "column": 1, "offset": 953 },
            "end": { "line": 39, "column": 31, "offset": 983 },
            "indent": []
          }
        }
      ],
      "position": {
        "start": { "line": 1, "column": 1, "offset": 0 },
        "end": { "line": 39, "column": 31, "offset": 983 }
      }
    },
    "scopeImports": ["import * as React from 'react'"],
    "scopeIdentifiers": ["React"],
    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Make Requests\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"JSON-RPC Methods\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is a quick command line example using CURL:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ curl -X POST\\n-H \\\"Content-Type: application/json\\\"\\n--data '{\\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 1, \\\"method\\\": \\\"eth_blockNumber\\\",\\n\\\"params\\\": []}'\\n\\\"https://mainnet.backbonecabal.xyz/YOUR-API-KEY\\\"\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The result should look something like this:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ {\\\"jsonrpc\\\": \\\"2.0\\\",\\\"result\\\": \\\"0x3ccb11\\\", \\\"id\\\":1}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOTE:\"), \" \\\"0x3ccb11\\\" will be replaced with the block number of the most recent block on that network\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ethereum/wiki/wiki/JSON-RPC\"\n  }), \"Read more about JSON RPC\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Important to note that JSON-RPC is transport agnostic, meaning same concepts can be used over HTTP, WebSockets or other\\nmessage passing environments. All JSON_RPC methods listed in 'Ethereum API' are also supported over websockets.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Rest-like Backbone API\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber?token=YOUR-API-KEY\\n\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Subscriptions and Filters\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"TODO\")));\n}\n;\nMDXContent.isMDXComponent = true;",
    "rawMDXOutput": "/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h1 parentName=\"section\">{`Make Requests`}</h1></section>\n    <section><h3 parentName=\"section\">{`JSON-RPC Methods`}</h3><p parentName=\"section\">{`Below is a quick command line example using CURL:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`$ curl -X POST\n-H \"Content-Type: application/json\"\n--data '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"eth_blockNumber\",\n\"params\": []}'\n\"https://mainnet.backbonecabal.xyz/YOUR-API-KEY\"\n`}</code></pre><p parentName=\"section\">{`The result should look something like this:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`$ {\"jsonrpc\": \"2.0\",\"result\": \"0x3ccb11\", \"id\":1}\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`NOTE:`}</strong>{` \"0x3ccb11\" will be replaced with the block number of the most recent block on that network`}</p><p parentName=\"section\"><a parentName=\"p\" {...{\n          \"href\": \"https://github.com/ethereum/wiki/wiki/JSON-RPC\"\n        }}>{`Read more about JSON RPC`}</a></p><p parentName=\"section\">{`Important to note that JSON-RPC is transport agnostic, meaning same concepts can be used over HTTP, WebSockets or other\nmessage passing environments. All JSON_RPC methods listed in 'Ethereum API' are also supported over websockets.`}</p></section>\n    <section><h3 parentName=\"section\">{`Rest-like Backbone API`}</h3><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber?token=YOUR-API-KEY\n`}</code></pre></section>\n    <section><h3 parentName=\"section\">{`Subscriptions and Filters`}</h3><p parentName=\"section\">{`TODO`}</p></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"
  }
}
