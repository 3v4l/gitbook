{
  "data": {
    "site": {
      "siteMetadata": {
        "title": "Manifold Finance Documentation Portal",
        "docsLocation": "https://github.com/manifoldfinance/gitdocs",
        "docsLocationType": "github",
        "editable": true
      }
    },
    "mdx": {
      "fields": {
        "id": "1675a22c-5e6e-5f0a-97ff-37a5615e3954",
        "title": "Eth Estimate Gas",
        "slug": "/api/post/eth_estimateGas"
      },
      "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"eth_estimateGas\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"/v1/jsonrpc/:network/eth_estimateGas\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction\\nwill not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually\\nused by the transaction, for a variety of reasons including EVM mechanics and node performance.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"REQUEST\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_estimateGas\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"HEADERS\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Content-Type: application/json\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"REQUEST PAYLOAD\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"TRANSACTION CALL OBJECT\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[required]\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"from\"), \": \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[optional]\"), \" 20 Bytes - The address the transaction is sent from.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"to\"), \": 20 Bytes - The address the transaction is directed to.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gas\"), \": \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[optional]\"), \" Integer of the gas provided for the transaction execution. eth_estimateGas consumes zero\\ngas, but this parameter may be needed by some executions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gasPrice\"), \": \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[optional]\"), \" Integer of the gasPrice used for each paid gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"value\"), \": \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[optional]\"), \" Integer of the value sent with this transaction\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"data\"), \": \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"[optional]\"), \" Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI\")))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If no gas limit is specified geth uses the block gas limit from the pending block as an upper bound. As a result the\\nreturned estimate might not be enough to executed the call/transaction when the amount of gas is higher than the pending\\nblock gas limit.\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"EXAMPLE\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"// HTTP POST api.backbonecabal.xyz\\ncurl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\\\\\n    -X POST \\\\\\n    -H \\\"Content-Type: application/json\\\" \\\\\\n    -d '{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_estimateGas\\\",\\\"params\\\": [{\\\"from\\\": \\\"0xb60e8dd61c5d32be8058bb8eb970870f07233155\\\",\\\"to\\\": \\\"0xd46e8dd67c5d32be8058bb8eb970870f07244567\\\",\\\"gas\\\": \\\"0x76c0\\\",\\\"gasPrice\\\": \\\"0x9184e72a000\\\",\\\"value\\\": \\\"0x9184e72a\\\",\\\"data\\\": \\\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\\\"}],\\\"id\\\":1}'\\n\\n// HTTP POST mainnet.backbonecabal.xyz\\ncurl https://mainnet.backbonecabal.xyz/ \\\\\\n    -X POST \\\\\\n    -H \\\"Content-Type: application/json\\\" \\\\\\n    -d '{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_estimateGas\\\",\\\"params\\\": [{\\\"from\\\": \\\"0xb60e8dd61c5d32be8058bb8eb970870f07233155\\\",\\\"to\\\": \\\"0xd46e8dd67c5d32be8058bb8eb970870f07244567\\\",\\\"gas\\\": \\\"0x76c0\\\",\\\"gasPrice\\\": \\\"0x9184e72a000\\\",\\\"value\\\": \\\"0x9184e72a\\\",\\\"data\\\": \\\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\\\"}],\\\"id\\\":1}'\\n\\n// WEBSOCKETS\\n>wscat -c wss://mainnet.backbonecabal.xyz/ws\\n>{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_estimateGas\\\",\\\"params\\\": [{\\\"from\\\": \\\"0xb60e8dd61c5d32be8058bb8eb970870f07233155\\\",\\\"to\\\": \\\"0xd46e8dd67c5d32be8058bb8eb970870f07244567\\\",\\\"gas\\\": \\\"0x76c0\\\",\\\"gasPrice\\\": \\\"0x9184e72a000\\\",\\\"value\\\": \\\"0x9184e72a\\\",\\\"data\\\": \\\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\\\"}],\\\"id\\\":1}\\n\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"RESPONSE\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"RESULT FIELDS\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GAS USED\"), \" - the amount of gas used.\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"BODY\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": 1,\\n    \\\"jsonrpc\\\": \\\"2.0\\\",\\n    \\\"result\\\": \\\"0x5cec\\\"\\n}\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
      "tableOfContents": {
        "items": [
          {
            "url": "#eth_estimategas",
            "title": "eth_estimateGas",
            "items": [
              {
                "url": "#v1jsonrpcnetworketh_estimategas",
                "title": "/v1/jsonrpc/:network/eth_estimateGas",
                "items": [
                  {
                    "url": "#request",
                    "title": "REQUEST",
                    "items": [
                      { "url": "#headers", "title": "HEADERS" },
                      { "url": "#request-payload", "title": "REQUEST PAYLOAD" },
                      { "url": "#example", "title": "EXAMPLE" }
                    ]
                  },
                  {
                    "url": "#response",
                    "title": "RESPONSE",
                    "items": [
                      { "url": "#result-fields", "title": "RESULT FIELDS" },
                      { "url": "#body", "title": "BODY" }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "timeToRead": 1,
      "parent": {
        "__typename": "File",
        "relativePath": "api/post/eth_estimateGas.md",
        "fields": null
      },
      "frontmatter": {
        "metaTitle": null,
        "showMetadata": null,
        "editable": null,
        "showPreviousNext": null,
        "showToc": null
      }
    },
    "gitBranch": { "name": "master" },
    "gitCommit": {
      "hash": "baf0fa6f35d8f820cc62345ab6dad7a035ce28db",
      "date": "2021-02-26 01:42"
    }
  },
  "pageContext": { "id": "1675a22c-5e6e-5f0a-97ff-37a5615e3954" }
}
